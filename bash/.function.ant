
setproxy() {
  port=7890
  export HTTPS_PROXY=http://127.0.0.1:$port
  export HTTP_PROXY=http://127.0.0.1:$port
  export ALL_PROXY=socks5://127.0.0.1:$port
}

unsetproxy() {
  unset HTTPS_PROXY
  unset HTTP_PROXY
  unset ALL_PROXY
}

showproxy() {
  echo "HTTP_PROXY  : $HTTP_PROXY"
  echo "HTTPS_PROXY : $HTTPS_PROXY"
  echo "ALL_PROXY   : $ALL_PROXY"
}

gi() { 
  curl -sL https://www.toptal.com/developers/gitignore/api/$@
}

fbi() {
  feh --bg-fill $1
}

ziptodir() {
  # 自动解压缩，并判断是否需要创建新的文件夹
  echo "doing"
}

win_class() {
  while true; do
    xprop | grep WM_CLAS
  done
}

ckpath() {
  IFS=":" read -ra path <<< "$PATH"
  for dir in "${path[@]}"; do
    [[ "$dir" =~ ^\$.* ]] && continue
    if [ ! -d "$dir" ] && [ "$dir" != '$PATH' ]; then
      echo -e "\e[31m${dir}\e[0m"
    else
      echo -e "\e[32m$dir\e[0m"
    fi
  done
}

clean_trash() {
  rm -r ~/.local/share/Trash/
}

wallpaper_walk() {
  for pic in *; do
    feh --bg-center  "$pic" 2>/dev/null
    if [ $? != 0 ]; then
      continue
    fi
    echo "${pic} center"
    sleep 2

    echo "${pic} scale"
    feh --bg-scale  "$pic"
    sleep 2

    echo "${pic} fill"
    feh --bg-fill  "$pic"
    sleep 2

    echo "${pic} max"
    feh --bg-max  "$pic"
    sleep 2

    echo "${pic} tile"
    feh --bg-tile  "$pic"
    sleep 2
  done 
}

clean_trash() {
  rm -rf ~/.local/share/Trash
  if [[ $? -eq 0 ]]; then
    echo "clean trash successful"
  fi
}
