
# Custom
bindsym Mod1+space            exec rofi -show drun
bindsym --release Mod1+Ctrl+q exec swaylock -i $HOME/.local/share/background/lock.png
bindsym $mod+Return           exec foot -e sh -c 'tmux a || tmux'
bindsym F1                    exec $HOME/.local/bin/foot.sh
bindsym Print                 exec flameshot gui

# Kill focused window
bindsym $mod+q kill
# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal
# Reload the configuration file
bindsym $mod+Shift+r reload
# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'This will end your Wayland session.' -B 'Yes' 'swaymsg exit'

# Moving around:
# Move your focus around
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right
# Or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right
# Move the focused window with the same, but add Shift
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right
# Ditto, with arrow keys
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 0

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 0

# move focus workspace
bindsym $mod+Ctrl+h workspace prev
bindsym $mod+Ctrl+l workspace next
bindsym $mod+Tab    workspace back_and_forth

# Layout stuff:
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv
# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
# Make the current focus fullscreen
bindsym $mod+f fullscreen
# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle
# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle
# Move focus to the parent container
bindsym $mod+a focus parent

# Scratchpad:
#
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show

#
# Key bindings for brightness control using `brightnessctl`.
# Displays a notification with the current value if /usr/bin/notify-send is available
#
# Brightness increase/decrease step can be customized by setting the `$brightness_step`
# variable to a numeric value before including the file.
#
# Requires:     brightnessctl >= 0.5.1-11
# Recommends:   libnotify

set $brightness_notification_cmd  command -v notify-send >/dev/null && \
        VALUE=$(brightnessctl --percentage get) && \
        notify-send -e -h string:x-canonical-private-synchronous:brightness \
            -h "int:value:$VALUE" -t 800 "Brightness: ${VALUE}%"

bindsym XF86MonBrightnessDown exec  'STEP="$brightness_step" && brightnessctl -q set ${STEP:-5}%- && $brightness_notification_cmd'
bindsym XF86MonBrightnessUp exec 'STEP="$brightness_step" && brightnessctl -q set +${STEP:-5}% && $brightness_notification_cmd'


# Key bindings for media player control via MPRIS D-Bus interface
#
# Requires:     playerctl

# Allow Play and Stop bindings even if the screen is locked
bindsym --locked {
    XF86AudioPlay       exec playerctl play-pause
    XF86AudioStop       exec playerctl stop
}

bindsym {
    XF86AudioForward    exec playerctl position +10
    XF86AudioNext       exec playerctl next
    XF86AudioPause      exec playerctl pause
    XF86AudioPrev       exec playerctl previous
    XF86AudioRewind     exec playerctl position -10
}


# Key bindings for taking screenshots
#
# The image files will be written to XDG_SCREENSHOTS_DIR if this is set
# or defined in user-dirs.dir, or to a fallback location XDG_PICTURES_DIR.
#
# Copy the file to ~/.config/sway/config.d/60-bindings-screenshot.conf (or to
# your $XDG_CONFIG_HOME location if set differently) to be able to overwrite
# existing shortcuts.
# Check 'man grimshot' for additional commands that you may find useful.
#
# Requires:     grimshot

bindsym {
    # Capture the currently active output
    # Print       exec grimshot save output
    # Capture the currently active window
    Alt+Print   exec grimshot save active
    # Select and capture a custom rectangular area
    Ctrl+Print  exec grimshot save area
}


# Key bindings to control pipewire or pulseaudio volume with pactl.
# Displays a notification with the current state if /usr/bin/notify-send is available
#
# Volume increase/decrease step can be customized by setting the `$volume_step`
# variable to a numeric value before including the file.
# Maximum volume boost level can be set with the `$volume_limit` variable.
#
# Requires:     pulseaudio-utils
# Recommends:   libnotify

set $volume_helper_cmd /usr/libexec/sway/volume-helper

# Allow volume controls even if the screen is locked
bindsym --locked {
    XF86AudioRaiseVolume exec \
        $volume_helper_cmd --limit "$volume_limit" --increase "$volume_step"
    XF86AudioLowerVolume exec \
        $volume_helper_cmd --limit "$volume_limit" --decrease "$volume_step"
    XF86AudioMute    exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $volume_helper_cmd
    XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
}

