{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	// map
	"map-string-interface": {
		"scope": "go",
		"prefix": "msi",
		"body":"map[string]interface{}{\"$0\"}",
	},
	"set": {
		"scope": "go",
		"prefix": "set",
		"body": "map[$0]struct{}",
	},

	// fmt
	"fmt-prlntln":{
		"scope": "go",
		"prefix": "pln",
		"body": "fmt.Println($0)",
	},
	"fmt-prlntf":{
		"scope": "go",
		"prefix": "plf",
		"body": "fmt.Printf(\"$0\",)",
	},
	"fmt-sprlntf":{
		"scope": "go",
		"prefix": "spf",
		"body": "fmt.Sprintf(\"$0\",)",
	},

	// return
	"return":{
		"scope": "go",
		"prefix": "re",
		"body": "return $0",
	}
}