[
    // 大小写转换
    {
        "key": "shift+l shift+l",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "shift+u shift+u",
        "command": "editor.action.transformToUppercase"
    },
    // 标签页管理
    {
        "key": "ctrl+o ctrl+w",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "ctrl+r ctrl+w",
        "command": "workbench.action.closeEditorsToTheRight"
    },
    {
        "key": "ctrl+l ctrl+w",
        "command": "workbench.action.closeEditorsToTheLeft"
    },
    // 格式化
    {
        "key": "ctrl+shift+i",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    // 終端
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.clear",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    // 配置文件
    {
        "key": "ctrl+,",
        "command": "workbench.action.openApplicationSettingsJson"
    },
    // 添加斷言斷點
    {
        "key": "ctrl+f9",
        "command": "editor.debug.action.conditionalBreakpoint"
    },
    {
        "key": "ctrl+f10",
        "command": "editor.debug.action.editBreakpoint"
    },
    // 冲突快捷键
    {
        "key": "f9",
        "command": "-sortLines.sortLines",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+w",
        "command": "-extension.vim_ctrl+w",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+enter",
        "command": "-workbench.action.chat.insertCodeBlock",
        "when": "accessibilityModeEnabled && hasChatProvider && inChat"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "ctrl+j",
        "command": "-extension.vim_ctrl+j",
        "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
    },
    {
        "key": "ctrl+enter",
        "command": "-github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
    },
    {
        "key": "f5",
        "command": "cmake.debugTarget",
        "when": "cmake:enableFullFeatureSet && inCMakeProject && !cmake:hideDebugCommand && !inDebugMode"
    },
    {
        "key": "ctrl+f5",
        "command": "-cmake.debugTarget",
        "when": "cmake:enableFullFeatureSet && inCMakeProject && !cmake:hideDebugCommand && !inDebugMode"
    },
    // Like Emacs
        {
        "key": "ctrl+b",
        "command": "cursorLeft",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+f",
        "command": "cursorRight",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+p",
        "command": "cursorUp",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+n",
        "command": "cursorDown",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },
    {
        "key": "alt+b",
        "command": "cursorWordLeft",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },
    {
        "key": "alt+f",
        "command": "cursorWordRight",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+a",
        "command": "cursorHome",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },
    {
        "key": "ctrl+e",
        "command": "cursorEnd",
        "when": "editorTextFocus && vim.mode == 'Insert'"
    },
]